{"ast":null,"code":"//\n//  runparser.js\n//\n/*\n  The author or authors of this code dedicate any and all \n  copyright interest in this code to the public domain.\n*/ // helper functions for the parser demo\nimport*as SRGS from'./srgs';function getElement(id){return document.getElementById(id);}function appendElement(parent,element,text){var elem=document.createElement(element);if(text)elem.appendChild(document.createTextNode(text));parent.appendChild(elem);return elem;}function runParser(input){var resultsDiv=getElement(\"results\");resultsDiv.innerHTML=\"\";var maybeFilter;if(getElement(\"usefilter\")&&getElement(\"usefilter\").checked){maybeFilter=filter;appendElement(resultsDiv,\"EM\",\"Using left-corner filter\");}var startTime=new Date();var parseChart=parse(input,grammar,grammar.$root,maybeFilter);var parseTime=new Date()-startTime;var parseResults=parseChart.resultsForRule(grammar.$root);console.log(parseResults[0]);if(parseResults){for(var i in parseResults){resultsDiv.innerHTML+=display(parseResults[i],\"\");}}else{appendElement(resultsDiv,\"P\",\"No results found!\");}/*\n  if (parseResults) { \n    var resultList = appendElement(resultsDiv, \"OL\");\n    for (var i in parseResults) \n      appendElement(resultList, \"LI\", JSON.stringify(parseResults[i]));\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n*/var statistics=parseChart.statistics();appendElement(resultsDiv,\"P\",\"Chart size: \"+statistics.nrEdges+\" edges\"+\" (\"+statistics.nrPassiveEdges+\" passive)\");appendElement(resultsDiv,\"P\",\"Parse time: \"+parseTime+\" ms\"+\" (\"+(parseTime/statistics.nrEdges).toFixed(2)+\" ms/edge)\");}function runWordParser(){runParser(getElement(\"input\").value.split(/\\s+/));}function runCharacterParser(){runParser(getElement(\"input\").value.split(\"\"));}export function loadGrammar(str){var dom=parseXML(str);var root=dom.getElementsByTagName(\"grammar\")[0].getAttribute(\"root\");var grammar=new SRGS.Grammar(root);var xrules=dom.getElementsByTagName(\"rule\");for(var r=0;r<xrules.length;r++){var xrule=xrules[r];var id=xrule.getAttribute(\"id\");grammar[id]=processRuleExpansions(xrule);}return grammar;}function processRuleExpansions(xrule){var xitems=xrule.childNodes;var rule=[];for(var i=0;i<xitems.length;i++){if(xitems[i].nodeType==3){var str=xitems[i].textContent.trim();if(str!=\"\"){rule.push(str.split(/ +/));}}else if(xitems[i].nodeType==1){if(xitems[i].nodeName==\"token\"){rule.push(SRGS.Tag(xitems[i].textContent));}else if(xitems[i].nodeName==\"ruleref\"){var uri=xitems[i].getAttribute(\"uri\");rule.push(SRGS.Ref(uri.slice(1)));}else if(xitems[i].nodeName==\"tag\"){rule.push(SRGS.Tag(xitems[i].textContent.trim()));}else if(xitems[i].nodeName==\"one-of\"){rule.push(SRGS.OneOf(processRuleExpansions(xitems[i])));}else if(xitems[i].nodeName==\"item\"){var repeat=xitems[i].getAttribute(\"repeat\");if(!repeat){rule.push(processRuleExpansions(xitems[i]));}else{var r=repeat.split(\"-\");var min=parseInt(r[0]);var max=parseInt(r[1]);max=max?max:Infinity;rule.push(SRGS.Repeat(min,max,processRuleExpansions(xitems[i])));}}else{console.log(xitems[i]);}}}return rule;}function parseXML(text){if(typeof DOMParser!=\"undefined\"){// Mozilla, Firefox, and related browsers\nreturn new DOMParser().parseFromString(text,\"application/xml\");}else if(typeof ActiveXObject!=\"undefined\"){// Internet Explorer.\nvar doc=XML.newDocument();// Create an empty document\ndoc.loadXML(text);// Parse text into it\nreturn doc;// Return it\n}else{// As a last resort, try loading the document from a data: URL\n// This is supposed to work in Safari. Thanks to Manos Batsis and\n// his Sarissa library (sarissa.sourceforge.net) for this technique.\nvar url=\"data:text/xml;charset=utf-8,\"+encodeURIComponent(text);var request=new XMLHttpRequest();request.open(\"GET\",url,false);request.send(null);return request.responseXML;}};","map":{"version":3,"sources":["C:/Users/User/speech-grammars/src/runparser.js"],"names":["SRGS","getElement","id","document","getElementById","appendElement","parent","element","text","elem","createElement","appendChild","createTextNode","runParser","input","resultsDiv","innerHTML","maybeFilter","checked","filter","startTime","Date","parseChart","parse","grammar","$root","parseTime","parseResults","resultsForRule","console","log","i","display","statistics","nrEdges","nrPassiveEdges","toFixed","runWordParser","value","split","runCharacterParser","loadGrammar","str","dom","parseXML","root","getElementsByTagName","getAttribute","Grammar","xrules","r","length","xrule","processRuleExpansions","xitems","childNodes","rule","nodeType","textContent","trim","push","nodeName","Tag","uri","Ref","slice","OneOf","repeat","min","parseInt","max","Infinity","Repeat","DOMParser","parseFromString","ActiveXObject","doc","XML","newDocument","loadXML","url","encodeURIComponent","request","XMLHttpRequest","open","send","responseXML"],"mappings":"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","sourcesContent":["//\n//  runparser.js\n//\n/*\n  The author or authors of this code dedicate any and all \n  copyright interest in this code to the public domain.\n*/\n\n\n// helper functions for the parser demo\n\nimport * as SRGS from './srgs'\n\nfunction getElement(id) {\n  return document.getElementById(id);\n}\n\nfunction appendElement(parent, element, text) {\n  var elem = document.createElement(element);\n  if (text)\n    elem.appendChild(document.createTextNode(text));\n  parent.appendChild(elem);\n  return elem\n}\n\nfunction runParser(input) {\n  var resultsDiv = getElement(\"results\");\n  resultsDiv.innerHTML = \"\";\n  var maybeFilter;\n  if (getElement(\"usefilter\") && getElement(\"usefilter\").checked) {\n    maybeFilter = filter;\n    appendElement(resultsDiv, \"EM\", \"Using left-corner filter\");\n  }\n  var startTime = new Date();\n  var parseChart = parse(input, grammar, grammar.$root, maybeFilter);\n  var parseTime = new Date() - startTime;\n  var parseResults = parseChart.resultsForRule(grammar.$root);\n  \n  console.log(parseResults[0]);\n  \n  if (parseResults) {\n    for (var i in parseResults) {\n        resultsDiv.innerHTML += display(parseResults[i],\"\");\n    }\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n  \n/*\n  if (parseResults) { \n    var resultList = appendElement(resultsDiv, \"OL\");\n    for (var i in parseResults) \n      appendElement(resultList, \"LI\", JSON.stringify(parseResults[i]));\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n*/\n  var statistics = parseChart.statistics()\n  appendElement(resultsDiv, \"P\", \"Chart size: \" + statistics.nrEdges + \" edges\" +\n\t\t\" (\" + statistics.nrPassiveEdges + \" passive)\");\n  appendElement(resultsDiv, \"P\", \"Parse time: \" + parseTime + \" ms\" + \n\t\t\" (\" + (parseTime / statistics.nrEdges).toFixed(2) + \" ms/edge)\");\n}\n\nfunction runWordParser() {\n  runParser(getElement(\"input\").value.split(/\\s+/));\n}\n\nfunction runCharacterParser() {\n  runParser(getElement(\"input\").value.split(\"\"));\n}\n\nexport function loadGrammar(str) {\n    var dom = parseXML(str);\n    var root = dom.getElementsByTagName(\"grammar\")[0].getAttribute(\"root\");\n    var grammar = new SRGS.Grammar(root);\n    var xrules = dom.getElementsByTagName(\"rule\");\n    for(var r=0; r < xrules.length; r++) {\n        var xrule = xrules[r];\n        var id = xrule.getAttribute(\"id\");\n        grammar[id] = processRuleExpansions(xrule);\n    }\n    return grammar;\n}\n\nfunction processRuleExpansions(xrule) {\n    var xitems = xrule.childNodes;\n    var rule = [];\n    for(var i=0; i < xitems.length; i++) {\n        if (xitems[i].nodeType == 3) {\n            var str = xitems[i].textContent.trim();\n            if (str != \"\") {\n                rule.push(str.split(/ +/));\n            }\n        } else if (xitems[i].nodeType == 1) {\n            if (xitems[i].nodeName == \"token\") {\n                rule.push(SRGS.Tag(xitems[i].textContent));\n            } else if (xitems[i].nodeName == \"ruleref\") {\n                var uri = xitems[i].getAttribute(\"uri\");\n                rule.push(SRGS.Ref(uri.slice(1)));\n            } else if (xitems[i].nodeName == \"tag\") {\n                rule.push(SRGS.Tag(xitems[i].textContent.trim()));\n            } else if (xitems[i].nodeName == \"one-of\") {\n                rule.push(SRGS.OneOf(processRuleExpansions(xitems[i])));\n            } else if (xitems[i].nodeName == \"item\") {\n                var repeat = xitems[i].getAttribute(\"repeat\");\n                if (!repeat) {\n                    rule.push(processRuleExpansions(xitems[i]));\n                } else {\n                    var r = repeat.split(\"-\");\n                    var min = parseInt(r[0]);\n                    var max = parseInt(r[1]);\n                    max = (max) ? max : Infinity;\n                    rule.push(SRGS.Repeat(min, max, processRuleExpansions(xitems[i])));\n                }\n            } else {\n                console.log(xitems[i]);\n            }\n        }\n    }\n\treturn rule;\n}\n\nfunction parseXML(text) {\n    if (typeof DOMParser != \"undefined\") {\n        // Mozilla, Firefox, and related browsers\n        return (new DOMParser()).parseFromString(text, \"application/xml\");\n    }\n    else if (typeof ActiveXObject != \"undefined\") {\n        // Internet Explorer.\n        var doc = XML.newDocument();  // Create an empty document\n        doc.loadXML(text);            // Parse text into it\n        return doc;                   // Return it\n    }\n    else {\n        // As a last resort, try loading the document from a data: URL\n        // This is supposed to work in Safari. Thanks to Manos Batsis and\n        // his Sarissa library (sarissa.sourceforge.net) for this technique.\n        var url = \"data:text/xml;charset=utf-8,\" + encodeURIComponent(text);\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", url, false);\n        request.send(null);\n        return request.responseXML;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//\n//  srgs.js\n//  Copyright (C) 2009, Peter Ljunglöf. All rights reserved.\n//\n/*\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU Lesser General Public License as published \n  by the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  \n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  \n  You should have received a copy of the GNU General Public License\n  and the GNU Lesser General Public License along with this program.  \n  If not, see <http://www.gnu.org/licenses/>.\n*/ //////////////////////////////////////////////////////////////////////\n// encoding SRGS grammars in javascript\nexport function Grammar(root){this.$root=root;this.VOID=[OneOf([])];this.NULL=[];this.GARBAGE=[];this.$check=function(){for(var i in this){if(i!==\"$root\"&&i!==\"$check\"){try{checkSequenceExpansion(this[i]);}catch(err){throwRuleError(\"When checking grammar rule '\"+i+\"'\",err);}}}};}export function WordSet(str){var words=str.split(/ +/);var set={};for(var i in words){set[words[i]]=true;}return set;}//////////////////////////////////////////////////////////////////////\n// rule expansion constructors\n// sequences are ordinary arrays\nexport function Sequence(seq){return seq;}export function Ref(ref){return new RefClass(ref);}export function Tag(tag){return new TagClass(tag);}export function OneOf(alternatives){return new OneOfClass(alternatives);}export function Repeat(min,max,sequence){return new RepeatClass(min,max,sequence);}export function Optional(sequence){return new RepeatClass(0,1,sequence);}//////////////////////////////////////////////////////////////////////\n// rule expansion classes\nexport function RefClass(ruleref){this.content=ruleref;this._string=\"$\"+ruleref;this.toString=function toString(){return this._string;};}export function TagClass(tag){this.content=tag;this._string=\"{\"+tag+\"}\";this.toString=function toString(){return this._string;};}export function OneOfClass(alternatives){this.content=alternatives;this._string=\"(\"+alternatives.join(\"|\")+\")\";this.toString=function toString(){return this._string;};}export function RepeatClass(min,max,sequence){this.min=min;this.max=max;this.content=sequence;this._string=this.content+\"<\"+this.min+\"-\"+(this.max==Infinity?\"\":this.max)+\">\";this.toString=function toString(){return this._string;};}//////////////////////////////////////////////////////////////////////\n// checking rule expansions\nexport function throwRuleError(message,error){if(error==undefined){throw TypeError(message);}else{throw TypeError(message+\"; \"+error.message);}}export function checkSequenceExpansion(sequence){try{if(sequence.constructor!==Array){throwRuleError(\"Expected Array, found \"+sequence.constructor.name);}for(var i in sequence){if(sequence[i].constructor==Array){checkSequenceExpansion(sequence[i]);}else if(sequence[i].constructor!=String){sequence[i].checkExpansion();}}}catch(err){throwRuleError(\"When checking sequence expansion\",err);}};RefClass.prototype.checkExpansion=function checkExpansion(){if(this.content.constructor!==String){throwRuleError(\"When checking Ref content; Expected String, found \"+this.content.constructor.name);}};TagClass.prototype.checkExpansion=function checkExpansion(){if(this.content.constructor!==String){throwRuleError(\"When checking Tag content; Expected String, found \"+this.content.constructor.name);}};OneOfClass.prototype.checkExpansion=function checkExpansion(){try{if(this.content.constructor!==Array){throwRuleError(\"Expected Array, found \"+this.content.constructor.name);}for(var i in this.content){checkSequenceExpansion(this.content[i]);}}catch(err){throwRuleError(\"When checking OneOf content\",err);}};RepeatClass.prototype.checkExpansion=function checkExpansion(){try{if(this.min.constructor!==Number||this.max.constructor!==Number){throwRuleError(\"Expected min/max to be Number, found \"+this.min.constructor.name+\"/\"+this.max.constructor.name);}if(!(0<=this.min&&this.min<=this.max)){throwRuleError(\"Expected 0 <= min <= max, found \"+this.min+\"/\"+this.max);}checkSequenceExpansion(this.content);}catch(err){throwRuleError(\"When checking Repeat content\",err);}};","map":{"version":3,"sources":["C:/Users/User/speech-grammars/src/srgs.js"],"names":["Grammar","root","$root","VOID","OneOf","NULL","GARBAGE","$check","i","checkSequenceExpansion","err","throwRuleError","WordSet","str","words","split","set","Sequence","seq","Ref","ref","RefClass","Tag","tag","TagClass","alternatives","OneOfClass","Repeat","min","max","sequence","RepeatClass","Optional","ruleref","content","_string","toString","join","Infinity","message","error","undefined","TypeError","constructor","Array","name","String","checkExpansion","prototype","Number"],"mappings":"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","sourcesContent":["//\n//  srgs.js\n//  Copyright (C) 2009, Peter Ljunglöf. All rights reserved.\n//\n/*\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU Lesser General Public License as published \n  by the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  \n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  \n  You should have received a copy of the GNU General Public License\n  and the GNU Lesser General Public License along with this program.  \n  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n//////////////////////////////////////////////////////////////////////\n// encoding SRGS grammars in javascript\n\nexport function Grammar(root) {\n  this.$root = root;\n  \n  this.VOID = [OneOf([])];\n  this.NULL = [];\n  this.GARBAGE = []; \n  \n  this.$check = function() {\n    for (var i in this) {\n      if (i !== \"$root\" && i !== \"$check\") {\n\ttry {\n\t  checkSequenceExpansion(this[i]);\n\t} catch(err) {\n\t  throwRuleError(\"When checking grammar rule '\" + i + \"'\", err);\n\t}\n      }\n    }\n  }\n}\n\nexport function WordSet(str) {\n  var words = str.split(/ +/);\n  var set = {};\n  for (var i in words) {\n    set[words[i]] = true;\n  }\n  return set;\n}\n\n//////////////////////////////////////////////////////////////////////\n// rule expansion constructors\n\n// sequences are ordinary arrays\nexport function Sequence(seq) {\n  return seq;\n}\n\nexport function Ref(ref) {\n  return new RefClass(ref);\n}\n\nexport function Tag(tag) {\n  return new TagClass(tag);\n}\n\nexport function OneOf(alternatives) {\n  return new OneOfClass(alternatives);\n}\n\nexport function Repeat(min, max, sequence) {\n  return new RepeatClass(min, max, sequence);\n}\n\nexport function Optional(sequence) {\n  return new RepeatClass(0, 1, sequence);\n}\n\n//////////////////////////////////////////////////////////////////////\n// rule expansion classes\n\nexport function RefClass(ruleref) {\n  this.content = ruleref;\n  this._string = \"$\" + ruleref;\n  this.toString = function toString() {return this._string}\n}\n    \nexport function TagClass(tag) {\n  this.content = tag;\n  this._string = \"{\" + tag + \"}\";\n  this.toString = function toString() {return this._string}\n}\n\nexport function OneOfClass(alternatives) {\n  this.content = alternatives;\n  this._string = \"(\" + alternatives.join(\"|\") + \")\";\n  this.toString = function toString() {return this._string}\n}\n\nexport function RepeatClass(min, max, sequence) {\n  this.min = min;\n  this.max = max;\n  this.content = sequence;\n  this._string = this.content + \"<\" + this.min + \"-\" + (this.max==Infinity ? \"\" : this.max) + \">\"\n  this.toString = function toString() {return this._string}\n}\n\n//////////////////////////////////////////////////////////////////////\n// checking rule expansions\n\nexport function throwRuleError(message, error) {\n  if (error == undefined) {\n    throw TypeError(message);\n  } else {\n    throw TypeError(message + \"; \" + error.message);\n  }\n}\n\nexport function checkSequenceExpansion(sequence) {\n  try {\n    if (sequence.constructor !== Array) {\n      throwRuleError(\"Expected Array, found \" + sequence.constructor.name);\n    }\n    for (var i in sequence) {\n      if (sequence[i].constructor == Array) {\n\tcheckSequenceExpansion(sequence[i]);\n      } else if (sequence[i].constructor != String) {\n\tsequence[i].checkExpansion();\n      }\n    }\n  } catch(err) {\n    throwRuleError(\"When checking sequence expansion\", err);\n  }\n};\n\nRefClass.prototype.checkExpansion = function checkExpansion() {\n  if (this.content.constructor !== String) {\n    throwRuleError(\"When checking Ref content; Expected String, found \" + this.content.constructor.name);\n  }\n};\n\nTagClass.prototype.checkExpansion = function checkExpansion() {\n  if (this.content.constructor !== String) {\n      throwRuleError(\"When checking Tag content; Expected String, found \" + this.content.constructor.name);\n  }\n};\n\nOneOfClass.prototype.checkExpansion = function checkExpansion() {\n  try {\n    if (this.content.constructor !== Array) {\n      throwRuleError(\"Expected Array, found \" + this.content.constructor.name);\n    }\n    for (var i in this.content) {\n      checkSequenceExpansion(this.content[i]);\n    }\n  } catch(err) {\n    throwRuleError(\"When checking OneOf content\", err);\n  }\n};\n\nRepeatClass.prototype.checkExpansion = function checkExpansion() {\n  try {\n    if (this.min.constructor !== Number || this.max.constructor !== Number) {\n      throwRuleError(\"Expected min/max to be Number, found \" + this.min.constructor.name + \"/\" + this.max.constructor.name);\n    }\n    if (!(0 <= this.min && this.min <= this.max)) {\n      throwRuleError(\"Expected 0 <= min <= max, found \" + this.min + \"/\" + this.max);\n    }\n    checkSequenceExpansion(this.content);\n  } catch(err) {\n    throwRuleError(\"When checking Repeat content\", err);\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}